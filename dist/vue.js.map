{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["\nlet oldArrayProto = Array.prototype\n\nexport const newArrayProto = Object.create(oldArrayProto)\n\nlet methods = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'reverse',\n    'splice',\n    'sort'\n]\n\nmethods.forEach(method =>{\n    newArrayProto[method] =  function (...args){\n        let ob = this.__ob__\n        console.log(ob, 'ob')\n        const result = oldArrayProto[method].call(this, ...args)\n        let inserted\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args\n                break\n            case 'splice':  //arr.splice(0, 1, {a: 1})\n                inserted = arr.slice(2)\n                break\n            default:\n                break\n        }\n        if(inserted){\n            //需要对数组中新增的对象进行劫持\n            ob.observeArray(inserted)\n        }\n        return result\n    }\n})\n","import { newArrayProto } from \"./array\";\n\nclass Observer{\n    constructor(data) {\n        //如果data是对象的话 就会出现循环遍历的情况 所以要避免循环遍历 __ob__ enumerable设置为false\n        Object.defineProperty(data, '__ob__',{\n            value: this,\n            enumerable: false\n        })\n        // data.__ob__ = this  //给观测类添加一个属性 方便调用类中的方法 同时也可以利用该属性做判断对象是否已经监测过了\n        if(Array.isArray(data)){\n            data.__proto__ =  newArrayProto\n            //重写数组的七个方法\n            this.observeArray(data)\n        }else{\n            //对data中已经存在的属性进行劫持 新增的和删除的无法劫持 需要使用$set $delete\n            this.walk(data)\n        }\n\n    }\n    observeArray(data){\n        //观测数组中的对象\n        data.forEach(item => observe(item))\n    }\n    walk(data){\n        Object.keys(data).forEach(key => defineReactive(data,key,data[key]))\n    }\n}\nexport function defineReactive(target,key, value) {\n    //对象中的value 是对象的话 要递归进行数据劫持\n    observe(value)\n    Object.defineProperty(target, key,{\n        get(){\n            console.log('用户获取值了',key)\n            return value\n        },\n        set(newValue){\n            console.log('用户设置值了')\n            if(newValue === value)  return\n            value = newValue\n        }\n    })\n}\nexport function observe(data) {\n    //只对 对象进行劫持\n    if(typeof data !== 'object' || data === null) return\n    if(data.__ob__ instanceof Observer) return  //对象已经被代理过了\n    return new Observer(data)\n}","//初始化状态\nimport { observe } from \"./observe/index\";\n\nexport function initState(vm) {\n    const ops = vm.$options\n    if(ops.data){\n        initData(vm)\n    }\n}\n\nfunction proxy(vm, target, key) {\n    Object.defineProperty(vm,key, {\n        get(){\n            return vm[target][key]\n        },\n        set(newValue){\n            vm[target][key] = newValue\n        }\n    })\n}\n\nfunction initData(vm){\n\n    let data = vm.$options.data     //data可能是函数和对象\n\n    data = typeof data === 'function' ? data.call(vm) : data\n\n    vm._data = data\n\n    //对数据进行劫持 vue2采用的是Object.defineProperty\n    observe(data)\n\n    //将vm._data进行代理 便于访问\n    for(let key in data){\n        proxy(vm,'_data', key)\n    }\n}\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\n\nexport function parseHTML(html) {\n\n    const ELEMENT_TYPE = 1\n    const TEXT_TYPE = 3\n    const stack = []\n    let currentParent   //用于指向栈中的最后一个元素\n    let root\n\n    //最终需要转化成AST语法树\n    function createASTElement(tag, attrs) {\n        return {\n            tag,\n            type: ELEMENT_TYPE,\n            children: [],\n            attrs,\n            parent: null\n        }\n    }\n\n    function start(tag, attrs) {\n        let node = createASTElement(tag, attrs)\n        if(!root){  //根节点赋值\n            root = node\n        }\n        if(currentParent){\n            node.parent = currentParent\n            // 节点是当前父节点的子节点\n            currentParent.children.push(node)\n        }\n        stack.push(node)\n        currentParent = node    //curentParent为栈中最后一个\n    }\n    function char(text) {\n        // 去重操作\n        text = text.replace(/\\s/g,'')\n        text && currentParent.children.push({\n            type: TEXT_TYPE,\n            text,\n            parent: currentParent\n        })\n    }\n\n    function end(tag) {\n        let node = stack.pop()  //弹出栈中最后一个节点\n        currentParent = stack[stack.length - 1]\n    }\n\n    function advance(n) {\n        html = html.substring(n)\n    }\n    function parseStartag(){\n        const start = html.match(startTagOpen)\n        if(start){\n            let match = {\n                tagName: start[1],\n                attrs: []\n            }\n            advance(start[0].length)\n            let attr, endMatch\n            while(!(endMatch = html.match(startTagClose)) && (attr = html.match(attribute))){\n                advance(attr[0].length)\n                match.attrs.push({name: attr[1], value: attr[3] || attr[4] || attr[5]})\n            }\n            if(endMatch){\n                advance(endMatch[0].length)\n            }\n            return match\n        }\n        //匹配属性\n\n        return false\n    }\n\n    while(html){\n        let textEnd = html.indexOf('<')   //如果indexof中的索引是0 则说明是个标签 textEnd为0 说明是开始或者结束标签\n        if(textEnd === 0){\n            const startTagMatch = parseStartag()\n            if(startTagMatch){\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue\n            }\n            let endTagName = html.match(endTag)\n            if(endTagName){\n                advance(endTagName[0].length)\n                end(endTagName[1])\n                continue\n            }\n            break\n        }\n        if(textEnd > 0){\n            let text = html.substring(0, textEnd)\n            if(text){\n                char(text)\n                advance(text.length)\n            }\n        }\n    }\n    return root\n}","import { parseHTML } from \"./parse\";\n\n//生成属性\nfunction genprops(attrs) {\n    let str = ''\n    for(let i= 0;i<attrs.length; i++){\n        if(attrs[i].name === 'style'){\n            let obj = {}\n            attrs[i].value.split(';').forEach(item =>{\n                let [key, value] = item.split(':')\n                key = key.trim()\n                value = value.trim()\n                obj[key] = value\n            })\n            attrs[i].value = obj\n        }\n        str += `${attrs[i].name}:${JSON.stringify(attrs[i].value) },`\n    }\n    //去掉最末端的逗号\n    return `{${str.slice(0,-1)}}`\n}\n\n//处理节点的children\nfunction genChildren(children) {\n    return children.map(child => gen(child)).join(',')\n}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\nfunction gen(node) {\n    if(node.type === 1){\n        return codegen(node)\n    }else{\n        // 文本节点\n         let text = node.text\n         if(!defaultTagRE.test(text)){\n             return `_v(${JSON.stringify(text)})`\n         }else{\n             // _v(_s(name)+ 'hello' + _s(name))\n             let tokens = []\n             let match\n             //正则有g 会记录位置 为了循环能够一直执行 需要重置lastIndex位置\n             defaultTagRE.lastIndex = 0\n             let lastIndex = 0\n             while(match = defaultTagRE.exec(text)){        // hello  {{ name }} hello {{age}} hi\n                 //根据索引的位置 获取差值表达式 和 普通文本\n                 let index = match.index\n                 if(index > lastIndex){\n                     tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n                 }\n                 tokens.push(`_s(${match[1].trim()})`)\n                 lastIndex = index + match[0].length\n\n             }\n             //截取最后的普通文本\n             if(lastIndex < text.length){\n                 tokens.push(JSON.stringify(text.slice(lastIndex)))\n             }\n             return `_v(${tokens.join('+')})`\n         }\n    }\n}\n\n//代码生成方法\nfunction codegen(ast) {\n    const children = genChildren(ast.children)\n    const code = (`_c('${ast.tag}', \n    ${ast.attrs.length ? genprops(ast.attrs) : 'null' }\n    ${ast.children.length ? `,${children}` : ''}\n    )`)\n    return code\n}\n// 对模板进行编译处理\nexport function compileToFunction(template) {\n    // 1. 将template转化成AST语法树\n    let ast = parseHTML(template)\n    //2. 生成render方法  （render方法执行后的结果就是虚拟DOM）\n    let code = codegen(ast)\n\n    //模板引擎的实现原理 就是 with + new Function\n    code = `with(this){return ${code}}`\n    let render = new Function(code)\n    return render\n\n}","export function createElementVnode(vm, tag, data, ...children) {\n    let key = data?.key\n    key ? delete data.key : ''\n    return vnode(vm,tag,key, data, children)\n}\n\nexport function createTextVnode(vm, text) {\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\n}\n/*\n* ast 是语法层面的转化 描述得是语法本身（js css html）\n*   而虚拟DOM描述的是DOM元素 可以增加一些自定义属性*/\nfunction vnode(vm, tag, key, props, children, text) {\n    return {\n        vm,\n        tag,\n        key,\n        props,\n        children,\n        text\n    }\n}","import { createElementVnode, createTextVnode } from \"./vdom\";\n\nexport function initLifeCycle(Vue) {\n    //根据虚拟DOM生成真实DOM\n    Vue.prototype._update = function (vnode){\n        const vm = this\n        const el = vm.$el\n        //既有初始化功能 也有更新的功能\n        vm.$el = patch(el, vnode)\n    }\n    //_c('div',{},children)  div null undefined\n    Vue.prototype._c = function (){\n        return createElementVnode(this, ...arguments)\n    }\n    Vue.prototype._s = function (value){\n        if(typeof value !== 'object')   return value\n        return JSON.stringify(value)\n    }\n    Vue.prototype._v = function (){\n        return createTextVnode(this, ...arguments)\n    }\n    //生成虚拟DOM 虚拟节点\n    Vue.prototype._render = function (){\n        return this.$options.render.call(this)\n    }\n\n}\nexport function mountComponent(vm, el){\n    vm.$el = el\n    //1. 调用render方法产生虚拟节点 虚拟DOM\n    vm._update(vm._render())\n    //2. 根据虚拟DOM产生真实DOM\n\n    //3. 插入到el元素中\n}\nfunction createElm(vnode) {\n    let { tag, props, children, text } = vnode\n    if(typeof tag === 'string'){\n        vnode.el = document.createElement(tag)\n        genProps(vnode.el, props)\n        children.forEach(child => {\n            vnode.el.appendChild(createElm(child))\n        })\n    }else {\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el\n}\n\nfunction genProps(el, props) {\n    // style: { color: 'red', backgroundColor: yellow }\n    for (const key in props) {\n        if(key === 'style'){\n            for(const styleName in props[key]){\n                el[styleName] = props[key][styleName]\n            }\n        }else{\n            el.setAttribute(key, props[key])\n        }\n    }\n}\n\nexport function patch(oldNode, vnode) {\n    const isRealElement = oldNode.nodeType\n    if(isRealElement){\n        const elm = oldNode //获取真实元素\n\n        const parentElm = elm.parentNode\n        let newElm = createElm(vnode)\n        //删除旧节点 插入新节点\n        parentElm.insertBefore(newElm, oldNode.nextSibling)\n        parentElm.removeChild(elm)\n\n        return newElm\n    }else{\n        //diff算法\n    }\n\n}\n\n// vue核心流程 1） 创造了响应式数据  2） 模板转换成ast语法树\n// 3) 将ast语法树转换了render函数 4) 后续每次数据更新可以只执行render函数 (无需再次执行ast转化的过程)\n// render函数会去产生虚拟节点（使用响应式数据）\n// 根据生成的虚拟节点创造真实的DOM","\nimport Vue from \"./index\";\nimport { initState } from \"./state\";\nimport { compileToFunction } from \"./compiler\";\nimport { mountComponent } from \"./lifecycle\";\n\n//扩展vue的初始化\nexport const initMixin = function (Vue){\n    //用于初始化操作\n    Vue.prototype._init = function (options){\n        const vm = this\n        vm.$options = options\n        //初始化状态\n        initState(vm)\n        if(options.el){\n            vm.$mount(options.el)\n        }\n    }\n    //挂载操作\n    Vue.prototype.$mount = function (el){\n        const vm = this\n        let ops = vm.$options\n        el = document.querySelector(el)\n        if(!ops.render){\n            let template\n            if(!ops.template && el){    //没写template 但是写了el\n                template = el.outerHTML\n            }else{\n                // 有template 就用template\n                if(el)  template = ops.template\n            }\n            if(template){\n                //对模板进行编辑\n                const render = compileToFunction(template)\n                ops.render = render\n            }\n        }\n\n        //挂载组件\n        mountComponent(vm, el)\n    }\n}\n\n","import { initMixin } from \"./init\";\nimport { initLifeCycle } from \"./lifecycle\";\n\nfunction Vue(options){\n    this._init(options)\n}\n\ninitMixin(Vue)\ninitLifeCycle(Vue)\n\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","ob","__ob__","console","log","_len","arguments","length","args","_key","result","call","apply","concat","inserted","arr","slice","observeArray","Observer","data","_classCallCheck","defineProperty","value","enumerable","isArray","__proto__","walk","_createClass","key","item","observe","keys","defineReactive","target","get","set","newValue","_typeof","initState","vm","ops","$options","initData","proxy","_data","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","char","text","replace","end","pop","advance","n","substring","parseStartag","match","tagName","attr","endMatch","name","textEnd","indexOf","startTagMatch","endTagName","genprops","str","_loop","i","obj","split","_item$split","_item$split2","_slicedToArray","trim","JSON","stringify","genChildren","map","child","gen","join","defaultTagRE","codegen","test","tokens","lastIndex","exec","index","ast","code","compileToFunction","template","render","Function","createElementVnode","vnode","createTextVnode","undefined","props","initLifeCycle","Vue","_update","el","$el","patch","_c","_s","_v","_render","mountComponent","createElm","document","createElement","genProps","appendChild","createTextNode","styleName","setAttribute","oldNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initMixin","_init","options","$mount","querySelector","outerHTML"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EACA,IAAIA,aAAa,GAAGC,KAAK,CAACC,SAAS,CAAA;EAE5B,IAAMC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACL,aAAa,CAAC,CAAA;EAEzD,IAAIM,OAAO,GAAG,CACV,MAAM,EACN,KAAK,EACL,OAAO,EACP,SAAS,EACT,SAAS,EACT,QAAQ,EACR,MAAM,CACT,CAAA;EAEDA,OAAO,CAACC,OAAO,CAAC,UAAAC,MAAM,EAAG;EACrBL,EAAAA,aAAa,CAACK,MAAM,CAAC,GAAI,YAAkB;EAAA,IAAA,IAAAC,qBAAA,CAAA;EACvC,IAAA,IAAIC,EAAE,GAAG,IAAI,CAACC,MAAM,CAAA;EACpBC,IAAAA,OAAO,CAACC,GAAG,CAACH,EAAE,EAAE,IAAI,CAAC,CAAA;EAAA,IAAA,KAAA,IAAAI,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAFaC,IAAI,GAAAhB,IAAAA,KAAA,CAAAa,IAAA,GAAAI,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA,EAAA,EAAA;EAAJD,MAAAA,IAAI,CAAAC,IAAA,CAAAH,GAAAA,SAAA,CAAAG,IAAA,CAAA,CAAA;EAAA,KAAA;MAGtC,IAAMC,MAAM,GAAG,CAAAV,qBAAA,GAAAT,aAAa,CAACQ,MAAM,CAAC,EAACY,IAAI,CAAAC,KAAA,CAAAZ,qBAAA,EAAA,CAAC,IAAI,CAAAa,CAAAA,MAAA,CAAKL,IAAI,CAAC,CAAA,CAAA;EACxD,IAAA,IAAIM,QAAQ,CAAA;EACZ,IAAA,QAAQf,MAAM;EACV,MAAA,KAAK,MAAM,CAAA;EACX,MAAA,KAAK,SAAS;EACVe,QAAAA,QAAQ,GAAGN,IAAI,CAAA;EACf,QAAA,MAAA;EACJ,MAAA,KAAK,QAAQ;EAAG;EACZM,QAAAA,QAAQ,GAAGC,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,CAAA;EACvB,QAAA,MAAA;EAEK,KAAA;EAEb,IAAA,IAAGF,QAAQ,EAAC;EACR;EACAb,MAAAA,EAAE,CAACgB,YAAY,CAACH,QAAQ,CAAC,CAAA;EAC7B,KAAA;EACA,IAAA,OAAOJ,MAAM,CAAA;KAChB,CAAA;EACL,CAAC,CAAC;;ECtCsC,IAElCQ,QAAQ,gBAAA,YAAA;IACV,SAAAA,QAAAA,CAAYC,IAAI,EAAE;EAAAC,IAAAA,eAAA,OAAAF,QAAA,CAAA,CAAA;EACd;EACAvB,IAAAA,MAAM,CAAC0B,cAAc,CAACF,IAAI,EAAE,QAAQ,EAAC;EACjCG,MAAAA,KAAK,EAAE,IAAI;EACXC,MAAAA,UAAU,EAAE,KAAA;EAChB,KAAC,CAAC,CAAA;EACF;EACA,IAAA,IAAG/B,KAAK,CAACgC,OAAO,CAACL,IAAI,CAAC,EAAC;QACnBA,IAAI,CAACM,SAAS,GAAI/B,aAAa,CAAA;EAC/B;EACA,MAAA,IAAI,CAACuB,YAAY,CAACE,IAAI,CAAC,CAAA;EAC3B,KAAC,MAAI;EACD;EACA,MAAA,IAAI,CAACO,IAAI,CAACP,IAAI,CAAC,CAAA;EACnB,KAAA;EAEJ,GAAA;EAACQ,EAAAA,YAAA,CAAAT,QAAA,EAAA,CAAA;MAAAU,GAAA,EAAA,cAAA;EAAAN,IAAAA,KAAA,EACD,SAAAL,YAAaE,CAAAA,IAAI,EAAC;EACd;EACAA,MAAAA,IAAI,CAACrB,OAAO,CAAC,UAAA+B,IAAI,EAAA;UAAA,OAAIC,OAAO,CAACD,IAAI,CAAC,CAAA;SAAC,CAAA,CAAA;EACvC,KAAA;EAAC,GAAA,EAAA;MAAAD,GAAA,EAAA,MAAA;EAAAN,IAAAA,KAAA,EACD,SAAAI,IAAKP,CAAAA,IAAI,EAAC;QACNxB,MAAM,CAACoC,IAAI,CAACZ,IAAI,CAAC,CAACrB,OAAO,CAAC,UAAA8B,GAAG,EAAA;UAAA,OAAII,cAAc,CAACb,IAAI,EAACS,GAAG,EAACT,IAAI,CAACS,GAAG,CAAC,CAAC,CAAA;SAAC,CAAA,CAAA;EACxE,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAV,QAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAEE,SAASc,cAAcA,CAACC,MAAM,EAACL,GAAG,EAAEN,KAAK,EAAE;EAC9C;IACAQ,OAAO,CAACR,KAAK,CAAC,CAAA;EACd3B,EAAAA,MAAM,CAAC0B,cAAc,CAACY,MAAM,EAAEL,GAAG,EAAC;MAC9BM,GAAG,EAAA,SAAAA,MAAE;EACD/B,MAAAA,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACwB,GAAG,CAAC,CAAA;EACzB,MAAA,OAAON,KAAK,CAAA;OACf;MACDa,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAC;EACTjC,MAAAA,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAA;QACrB,IAAGgC,QAAQ,KAAKd,KAAK,EAAG,OAAA;EACxBA,MAAAA,KAAK,GAAGc,QAAQ,CAAA;EACpB,KAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;EACO,SAASN,OAAOA,CAACX,IAAI,EAAE;EAC1B;IACA,IAAGkB,OAAA,CAAOlB,IAAI,CAAA,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAA;EAC9C,EAAA,IAAGA,IAAI,CAACjB,MAAM,YAAYgB,QAAQ,EAAE,OAAM;EAC1C,EAAA,OAAO,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAA;EAC7B;;EChDA;EAGO,SAASmB,SAASA,CAACC,EAAE,EAAE;EAC1B,EAAA,IAAMC,GAAG,GAAGD,EAAE,CAACE,QAAQ,CAAA;IACvB,IAAGD,GAAG,CAACrB,IAAI,EAAC;MACRuB,QAAQ,CAACH,EAAE,CAAC,CAAA;EAChB,GAAA;EACJ,CAAA;EAEA,SAASI,KAAKA,CAACJ,EAAE,EAAEN,MAAM,EAAEL,GAAG,EAAE;EAC5BjC,EAAAA,MAAM,CAAC0B,cAAc,CAACkB,EAAE,EAACX,GAAG,EAAE;MAC1BM,GAAG,EAAA,SAAAA,MAAE;EACD,MAAA,OAAOK,EAAE,CAACN,MAAM,CAAC,CAACL,GAAG,CAAC,CAAA;OACzB;MACDO,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAC;EACTG,MAAAA,EAAE,CAACN,MAAM,CAAC,CAACL,GAAG,CAAC,GAAGQ,QAAQ,CAAA;EAC9B,KAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;EAEA,SAASM,QAAQA,CAACH,EAAE,EAAC;EAEjB,EAAA,IAAIpB,IAAI,GAAGoB,EAAE,CAACE,QAAQ,CAACtB,IAAI,CAAK;;EAEhCA,EAAAA,IAAI,GAAG,OAAOA,IAAI,KAAK,UAAU,GAAGA,IAAI,CAACR,IAAI,CAAC4B,EAAE,CAAC,GAAGpB,IAAI,CAAA;IAExDoB,EAAE,CAACK,KAAK,GAAGzB,IAAI,CAAA;;EAEf;IACAW,OAAO,CAACX,IAAI,CAAC,CAAA;;EAEb;EACA,EAAA,KAAI,IAAIS,GAAG,IAAIT,IAAI,EAAC;EAChBwB,IAAAA,KAAK,CAACJ,EAAE,EAAC,OAAO,EAAEX,GAAG,CAAC,CAAA;EAC1B,GAAA;EACJ;;ECpCA,IAAMiB,MAAM,GAAiC,8BAAA,CAAA;EAC7C,IAAMC,YAAY,UAAAjC,MAAA,CAAUgC,MAAM,EAAAhC,OAAAA,CAAAA,CAAAA,MAAA,CAAQgC,MAAM,EAAG,GAAA,CAAA,CAAA;EACnD,IAAME,YAAY,GAAG,IAAIC,MAAM,CAAA,IAAA,CAAAnC,MAAA,CAAMiC,YAAY,CAAG,CAAA,CAAC;EACrD,IAAMG,MAAM,GAAG,IAAID,MAAM,CAAA,OAAA,CAAAnC,MAAA,CAASiC,YAAY,EAAS,QAAA,CAAA,CAAA,CAAC;EACxD,IAAMI,SAAS,GAAG,2EAA2E,CAAC;EAC9F;EACA,IAAMC,aAAa,GAAG,YAAY,CAAC;;EAE5B,SAASC,SAASA,CAACC,IAAI,EAAE;IAE5B,IAAMC,YAAY,GAAG,CAAC,CAAA;IACtB,IAAMC,SAAS,GAAG,CAAC,CAAA;IACnB,IAAMC,KAAK,GAAG,EAAE,CAAA;EAChB,EAAA,IAAIC,aAAa,CAAG;EACpB,EAAA,IAAIC,IAAI,CAAA;;EAER;EACA,EAAA,SAASC,gBAAgBA,CAACC,GAAG,EAAEC,KAAK,EAAE;MAClC,OAAO;EACHD,MAAAA,GAAG,EAAHA,GAAG;EACHE,MAAAA,IAAI,EAAER,YAAY;EAClBS,MAAAA,QAAQ,EAAE,EAAE;EACZF,MAAAA,KAAK,EAALA,KAAK;EACLG,MAAAA,MAAM,EAAE,IAAA;OACX,CAAA;EACL,GAAA;EAEA,EAAA,SAASC,KAAKA,CAACL,GAAG,EAAEC,KAAK,EAAE;EACvB,IAAA,IAAIK,IAAI,GAAGP,gBAAgB,CAACC,GAAG,EAAEC,KAAK,CAAC,CAAA;MACvC,IAAG,CAACH,IAAI,EAAC;EAAG;EACRA,MAAAA,IAAI,GAAGQ,IAAI,CAAA;EACf,KAAA;EACA,IAAA,IAAGT,aAAa,EAAC;QACbS,IAAI,CAACF,MAAM,GAAGP,aAAa,CAAA;EAC3B;EACAA,MAAAA,aAAa,CAACM,QAAQ,CAACI,IAAI,CAACD,IAAI,CAAC,CAAA;EACrC,KAAA;EACAV,IAAAA,KAAK,CAACW,IAAI,CAACD,IAAI,CAAC,CAAA;MAChBT,aAAa,GAAGS,IAAI,CAAI;EAC5B,GAAA;;IACA,SAASE,KAAIA,CAACC,IAAI,EAAE;EAChB;MACAA,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,KAAK,EAAC,EAAE,CAAC,CAAA;EAC7BD,IAAAA,IAAI,IAAIZ,aAAa,CAACM,QAAQ,CAACI,IAAI,CAAC;EAChCL,MAAAA,IAAI,EAAEP,SAAS;EACfc,MAAAA,IAAI,EAAJA,IAAI;EACJL,MAAAA,MAAM,EAAEP,aAAAA;EACZ,KAAC,CAAC,CAAA;EACN,GAAA;IAEA,SAASc,GAAGA,CAACX,GAAG,EAAE;EACd,IAAWJ,KAAK,CAACgB,GAAG,GAAI;MACxBf,aAAa,GAAGD,KAAK,CAACA,KAAK,CAACjD,MAAM,GAAG,CAAC,CAAC,CAAA;EAC3C,GAAA;IAEA,SAASkE,OAAOA,CAACC,CAAC,EAAE;EAChBrB,IAAAA,IAAI,GAAGA,IAAI,CAACsB,SAAS,CAACD,CAAC,CAAC,CAAA;EAC5B,GAAA;IACA,SAASE,YAAYA,GAAE;EACnB,IAAA,IAAMX,KAAK,GAAGZ,IAAI,CAACwB,KAAK,CAAC9B,YAAY,CAAC,CAAA;EACtC,IAAA,IAAGkB,KAAK,EAAC;EACL,MAAA,IAAIY,KAAK,GAAG;EACRC,QAAAA,OAAO,EAAEb,KAAK,CAAC,CAAC,CAAC;EACjBJ,QAAAA,KAAK,EAAE,EAAA;SACV,CAAA;EACDY,MAAAA,OAAO,CAACR,KAAK,CAAC,CAAC,CAAC,CAAC1D,MAAM,CAAC,CAAA;QACxB,IAAIwE,IAAI,EAAEC,QAAQ,CAAA;QAClB,OAAM,EAAEA,QAAQ,GAAG3B,IAAI,CAACwB,KAAK,CAAC1B,aAAa,CAAC,CAAC,KAAK4B,IAAI,GAAG1B,IAAI,CAACwB,KAAK,CAAC3B,SAAS,CAAC,CAAC,EAAC;EAC5EuB,QAAAA,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC,CAACxE,MAAM,CAAC,CAAA;EACvBsE,QAAAA,KAAK,CAAChB,KAAK,CAACM,IAAI,CAAC;EAACc,UAAAA,IAAI,EAAEF,IAAI,CAAC,CAAC,CAAC;EAAEzD,UAAAA,KAAK,EAAEyD,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAA;EAAC,SAAC,CAAC,CAAA;EAC3E,OAAA;EACA,MAAA,IAAGC,QAAQ,EAAC;EACRP,QAAAA,OAAO,CAACO,QAAQ,CAAC,CAAC,CAAC,CAACzE,MAAM,CAAC,CAAA;EAC/B,OAAA;EACA,MAAA,OAAOsE,KAAK,CAAA;EAChB,KAAA;EACA;;EAEA,IAAA,OAAO,KAAK,CAAA;EAChB,GAAA;EAEA,EAAA,OAAMxB,IAAI,EAAC;MACP,IAAI6B,OAAO,GAAG7B,IAAI,CAAC8B,OAAO,CAAC,GAAG,CAAC,CAAG;MAClC,IAAGD,OAAO,KAAK,CAAC,EAAC;QACb,IAAME,aAAa,GAAGR,YAAY,EAAE,CAAA;EACpC,MAAA,IAAGQ,aAAa,EAAC;UACbnB,KAAK,CAACmB,aAAa,CAACN,OAAO,EAAEM,aAAa,CAACvB,KAAK,CAAC,CAAA;EACjD,QAAA,SAAA;EACJ,OAAA;EACA,MAAA,IAAIwB,UAAU,GAAGhC,IAAI,CAACwB,KAAK,CAAC5B,MAAM,CAAC,CAAA;EACnC,MAAA,IAAGoC,UAAU,EAAC;EACVZ,QAAAA,OAAO,CAACY,UAAU,CAAC,CAAC,CAAC,CAAC9E,MAAM,CAAC,CAAA;EAC7BgE,QAAAA,GAAG,CAACc,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA;EAClB,QAAA,SAAA;EACJ,OAAA;EACA,MAAA,MAAA;EACJ,KAAA;MACA,IAAGH,OAAO,GAAG,CAAC,EAAC;QACX,IAAIb,IAAI,GAAGhB,IAAI,CAACsB,SAAS,CAAC,CAAC,EAAEO,OAAO,CAAC,CAAA;EACrC,MAAA,IAAGb,IAAI,EAAC;UACJD,KAAI,CAACC,IAAI,CAAC,CAAA;EACVI,QAAAA,OAAO,CAACJ,IAAI,CAAC9D,MAAM,CAAC,CAAA;EACxB,OAAA;EACJ,KAAA;EACJ,GAAA;EACA,EAAA,OAAOmD,IAAI,CAAA;EACf;;ECxGA;EACA,SAAS4B,QAAQA,CAACzB,KAAK,EAAE;IACrB,IAAI0B,GAAG,GAAG,EAAE,CAAA;IAAA,IAAAC,KAAA,GAAAA,SAAAA,KAAAA,GACqB;MAC7B,IAAG3B,KAAK,CAAC4B,CAAC,CAAC,CAACR,IAAI,KAAK,OAAO,EAAC;QACzB,IAAIS,GAAG,GAAG,EAAE,CAAA;EACZ7B,MAAAA,KAAK,CAAC4B,CAAC,CAAC,CAACnE,KAAK,CAACqE,KAAK,CAAC,GAAG,CAAC,CAAC7F,OAAO,CAAC,UAAA+B,IAAI,EAAG;EACrC,QAAA,IAAA+D,WAAA,GAAmB/D,IAAI,CAAC8D,KAAK,CAAC,GAAG,CAAC;YAAAE,YAAA,GAAAC,cAAA,CAAAF,WAAA,EAAA,CAAA,CAAA;EAA7BhE,UAAAA,GAAG,GAAAiE,YAAA,CAAA,CAAA,CAAA;EAAEvE,UAAAA,KAAK,GAAAuE,YAAA,CAAA,CAAA,CAAA,CAAA;EACfjE,QAAAA,GAAG,GAAGA,GAAG,CAACmE,IAAI,EAAE,CAAA;EAChBzE,QAAAA,KAAK,GAAGA,KAAK,CAACyE,IAAI,EAAE,CAAA;EACpBL,QAAAA,GAAG,CAAC9D,GAAG,CAAC,GAAGN,KAAK,CAAA;EACpB,OAAC,CAAC,CAAA;EACFuC,MAAAA,KAAK,CAAC4B,CAAC,CAAC,CAACnE,KAAK,GAAGoE,GAAG,CAAA;EACxB,KAAA;MACAH,GAAG,IAAA,EAAA,CAAA1E,MAAA,CAAOgD,KAAK,CAAC4B,CAAC,CAAC,CAACR,IAAI,EAAApE,GAAAA,CAAAA,CAAAA,MAAA,CAAImF,IAAI,CAACC,SAAS,CAACpC,KAAK,CAAC4B,CAAC,CAAC,CAACnE,KAAK,CAAC,EAAI,GAAA,CAAA,CAAA;KAChE,CAAA;EAZD,EAAA,KAAI,IAAImE,CAAC,GAAE,CAAC,EAACA,CAAC,GAAC5B,KAAK,CAACtD,MAAM,EAAEkF,CAAC,EAAE,EAAA;MAAAD,KAAA,EAAA,CAAA;EAAA,GAAA;EAahC;IACA,OAAA3E,GAAAA,CAAAA,MAAA,CAAW0E,GAAG,CAACvE,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAA,GAAA,CAAA,CAAA;EAC9B,CAAA;;EAEA;EACA,SAASkF,WAAWA,CAACnC,QAAQ,EAAE;EAC3B,EAAA,OAAOA,QAAQ,CAACoC,GAAG,CAAC,UAAAC,KAAK,EAAA;MAAA,OAAIC,GAAG,CAACD,KAAK,CAAC,CAAA;EAAA,GAAA,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAAA;EACtD,CAAA;EACA,IAAMC,YAAY,GAAG,0BAA0B,CAAC;EAChD,SAASF,GAAGA,CAACnC,IAAI,EAAE;EACf,EAAA,IAAGA,IAAI,CAACJ,IAAI,KAAK,CAAC,EAAC;MACf,OAAO0C,OAAO,CAACtC,IAAI,CAAC,CAAA;EACxB,GAAC,MAAI;EACD;EACC,IAAA,IAAIG,IAAI,GAAGH,IAAI,CAACG,IAAI,CAAA;EACpB,IAAA,IAAG,CAACkC,YAAY,CAACE,IAAI,CAACpC,IAAI,CAAC,EAAC;EACxB,MAAA,OAAA,KAAA,CAAAxD,MAAA,CAAamF,IAAI,CAACC,SAAS,CAAC5B,IAAI,CAAC,EAAA,GAAA,CAAA,CAAA;EACrC,KAAC,MAAI;EACD;QACA,IAAIqC,MAAM,GAAG,EAAE,CAAA;EACf,MAAA,IAAI7B,KAAK,CAAA;EACT;QACA0B,YAAY,CAACI,SAAS,GAAG,CAAC,CAAA;QAC1B,IAAIA,SAAS,GAAG,CAAC,CAAA;QACjB,OAAM9B,KAAK,GAAG0B,YAAY,CAACK,IAAI,CAACvC,IAAI,CAAC,EAAC;EAAS;EAC3C;EACA,QAAA,IAAIwC,KAAK,GAAGhC,KAAK,CAACgC,KAAK,CAAA;UACvB,IAAGA,KAAK,GAAGF,SAAS,EAAC;EACjBD,UAAAA,MAAM,CAACvC,IAAI,CAAC6B,IAAI,CAACC,SAAS,CAAC5B,IAAI,CAACrD,KAAK,CAAC2F,SAAS,EAAEE,KAAK,CAAC,CAAC,CAAC,CAAA;EAC7D,SAAA;EACAH,QAAAA,MAAM,CAACvC,IAAI,CAAAtD,KAAAA,CAAAA,MAAA,CAAOgE,KAAK,CAAC,CAAC,CAAC,CAACkB,IAAI,EAAE,EAAI,GAAA,CAAA,CAAA,CAAA;UACrCY,SAAS,GAAGE,KAAK,GAAGhC,KAAK,CAAC,CAAC,CAAC,CAACtE,MAAM,CAAA;EAEvC,OAAA;EACA;EACA,MAAA,IAAGoG,SAAS,GAAGtC,IAAI,CAAC9D,MAAM,EAAC;EACvBmG,QAAAA,MAAM,CAACvC,IAAI,CAAC6B,IAAI,CAACC,SAAS,CAAC5B,IAAI,CAACrD,KAAK,CAAC2F,SAAS,CAAC,CAAC,CAAC,CAAA;EACtD,OAAA;EACA,MAAA,OAAA,KAAA,CAAA9F,MAAA,CAAa6F,MAAM,CAACJ,IAAI,CAAC,GAAG,CAAC,EAAA,GAAA,CAAA,CAAA;EACjC,KAAA;EACL,GAAA;EACJ,CAAA;;EAEA;EACA,SAASE,OAAOA,CAACM,GAAG,EAAE;EAClB,EAAA,IAAM/C,QAAQ,GAAGmC,WAAW,CAACY,GAAG,CAAC/C,QAAQ,CAAC,CAAA;EAC1C,EAAA,IAAMgD,IAAI,GAAAlG,MAAAA,CAAAA,MAAA,CAAWiG,GAAG,CAAClD,GAAG,EAAA,WAAA,CAAA,CAAA/C,MAAA,CAC1BiG,GAAG,CAACjD,KAAK,CAACtD,MAAM,GAAG+E,QAAQ,CAACwB,GAAG,CAACjD,KAAK,CAAC,GAAG,MAAM,EAAAhD,QAAAA,CAAAA,CAAAA,MAAA,CAC/CiG,GAAG,CAAC/C,QAAQ,CAACxD,MAAM,GAAAM,GAAAA,CAAAA,MAAA,CAAOkD,QAAQ,CAAA,GAAK,EAAE,EACxC,SAAA,CAAA,CAAA;EACH,EAAA,OAAOgD,IAAI,CAAA;EACf,CAAA;EACA;EACO,SAASC,iBAAiBA,CAACC,QAAQ,EAAE;EACxC;EACA,EAAA,IAAIH,GAAG,GAAG1D,SAAS,CAAC6D,QAAQ,CAAC,CAAA;EAC7B;EACA,EAAA,IAAIF,IAAI,GAAGP,OAAO,CAACM,GAAG,CAAC,CAAA;;EAEvB;EACAC,EAAAA,IAAI,GAAAlG,oBAAAA,CAAAA,MAAA,CAAwBkG,IAAI,EAAG,GAAA,CAAA,CAAA;EACnC,EAAA,IAAIG,MAAM,GAAG,IAAIC,QAAQ,CAACJ,IAAI,CAAC,CAAA;EAC/B,EAAA,OAAOG,MAAM,CAAA;EAEjB;;EClFO,SAASE,kBAAkBA,CAAC7E,EAAE,EAAEqB,GAAG,EAAEzC,IAAI,EAAe;IAC3D,IAAIS,GAAG,GAAGT,IAAI,KAAA,IAAA,IAAJA,IAAI,KAAJA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAES,GAAG,CAAA;EACnBA,EAAAA,GAAG,GAAG,OAAOT,IAAI,CAACS,GAAG,GAAG,EAAE,CAAA;IAAA,KAAAvB,IAAAA,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAFuBwD,QAAQ,OAAAvE,KAAA,CAAAa,IAAA,GAAAA,CAAAA,GAAAA,IAAA,WAAAI,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA,EAAA,EAAA;EAARsD,IAAAA,QAAQ,CAAAtD,IAAA,GAAAH,CAAAA,CAAAA,GAAAA,SAAA,CAAAG,IAAA,CAAA,CAAA;EAAA,GAAA;IAGzD,OAAO4G,KAAK,CAAC9E,EAAE,EAACqB,GAAG,EAAChC,GAAG,EAAET,IAAI,EAAE4C,QAAQ,CAAC,CAAA;EAC5C,CAAA;EAEO,SAASuD,eAAeA,CAAC/E,EAAE,EAAE8B,IAAI,EAAE;EACtC,EAAA,OAAOgD,KAAK,CAAC9E,EAAE,EAAEgF,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAElD,IAAI,CAAC,CAAA;EACtE,CAAA;EACA;EACA;EACA;EACA,SAASgD,KAAKA,CAAC9E,EAAE,EAAEqB,GAAG,EAAEhC,GAAG,EAAE4F,KAAK,EAAEzD,QAAQ,EAAEM,IAAI,EAAE;IAChD,OAAO;EACH9B,IAAAA,EAAE,EAAFA,EAAE;EACFqB,IAAAA,GAAG,EAAHA,GAAG;EACHhC,IAAAA,GAAG,EAAHA,GAAG;EACH4F,IAAAA,KAAK,EAALA,KAAK;EACLzD,IAAAA,QAAQ,EAARA,QAAQ;EACRM,IAAAA,IAAI,EAAJA,IAAAA;KACH,CAAA;EACL;;ECnBO,SAASoD,aAAaA,CAACC,GAAG,EAAE;EAC/B;EACAA,EAAAA,GAAG,CAACjI,SAAS,CAACkI,OAAO,GAAG,UAAUN,KAAK,EAAC;MACpC,IAAM9E,EAAE,GAAG,IAAI,CAAA;EACf,IAAA,IAAMqF,EAAE,GAAGrF,EAAE,CAACsF,GAAG,CAAA;EACjB;MACAtF,EAAE,CAACsF,GAAG,GAAGC,KAAK,CAACF,EAAE,EAAEP,KAAK,CAAC,CAAA;KAC5B,CAAA;EACD;EACAK,EAAAA,GAAG,CAACjI,SAAS,CAACsI,EAAE,GAAG,YAAW;EAC1B,IAAA,OAAOX,kBAAkB,CAAAxG,KAAA,CAAC,KAAA,CAAA,EAAA,CAAA,IAAI,EAAAC,MAAA,CAAArB,KAAA,CAAAC,SAAA,CAAAuB,KAAA,CAAAL,IAAA,CAAKL,SAAS,CAAC,CAAA,CAAA,CAAA;KAChD,CAAA;EACDoH,EAAAA,GAAG,CAACjI,SAAS,CAACuI,EAAE,GAAG,UAAU1G,KAAK,EAAC;EAC/B,IAAA,IAAGe,OAAA,CAAOf,KAAK,MAAK,QAAQ,EAAI,OAAOA,KAAK,CAAA;EAC5C,IAAA,OAAO0E,IAAI,CAACC,SAAS,CAAC3E,KAAK,CAAC,CAAA;KAC/B,CAAA;EACDoG,EAAAA,GAAG,CAACjI,SAAS,CAACwI,EAAE,GAAG,YAAW;EAC1B,IAAA,OAAOX,eAAe,CAAA1G,KAAA,CAAC,KAAA,CAAA,EAAA,CAAA,IAAI,EAAAC,MAAA,CAAArB,KAAA,CAAAC,SAAA,CAAAuB,KAAA,CAAAL,IAAA,CAAKL,SAAS,CAAC,CAAA,CAAA,CAAA;KAC7C,CAAA;EACD;EACAoH,EAAAA,GAAG,CAACjI,SAAS,CAACyI,OAAO,GAAG,YAAW;MAC/B,OAAO,IAAI,CAACzF,QAAQ,CAACyE,MAAM,CAACvG,IAAI,CAAC,IAAI,CAAC,CAAA;KACzC,CAAA;EAEL,CAAA;EACO,SAASwH,cAAcA,CAAC5F,EAAE,EAAEqF,EAAE,EAAC;IAClCrF,EAAE,CAACsF,GAAG,GAAGD,EAAE,CAAA;EACX;EACArF,EAAAA,EAAE,CAACoF,OAAO,CAACpF,EAAE,CAAC2F,OAAO,EAAE,CAAC,CAAA;EACxB;;EAEA;EACJ,CAAA;;EACA,SAASE,SAASA,CAACf,KAAK,EAAE;EACtB,EAAA,IAAMzD,GAAG,GAA4ByD,KAAK,CAApCzD,GAAG;MAAE4D,KAAK,GAAqBH,KAAK,CAA/BG,KAAK;MAAEzD,QAAQ,GAAWsD,KAAK,CAAxBtD,QAAQ;MAAEM,IAAI,GAAKgD,KAAK,CAAdhD,IAAI,CAAA;EAChC,EAAA,IAAG,OAAOT,GAAG,KAAK,QAAQ,EAAC;MACvByD,KAAK,CAACO,EAAE,GAAGS,QAAQ,CAACC,aAAa,CAAC1E,GAAG,CAAC,CAAA;EACtC2E,IAAAA,QAAQ,CAAClB,KAAK,CAACO,EAAE,EAAEJ,KAAK,CAAC,CAAA;EACzBzD,IAAAA,QAAQ,CAACjE,OAAO,CAAC,UAAAsG,KAAK,EAAI;QACtBiB,KAAK,CAACO,EAAE,CAACY,WAAW,CAACJ,SAAS,CAAChC,KAAK,CAAC,CAAC,CAAA;EAC1C,KAAC,CAAC,CAAA;EACN,GAAC,MAAK;MACFiB,KAAK,CAACO,EAAE,GAAGS,QAAQ,CAACI,cAAc,CAACpE,IAAI,CAAC,CAAA;EAC5C,GAAA;IACA,OAAOgD,KAAK,CAACO,EAAE,CAAA;EACnB,CAAA;EAEA,SAASW,QAAQA,CAACX,EAAE,EAAEJ,KAAK,EAAE;EACzB;EACA,EAAA,KAAK,IAAM5F,GAAG,IAAI4F,KAAK,EAAE;MACrB,IAAG5F,GAAG,KAAK,OAAO,EAAC;EACf,MAAA,KAAI,IAAM8G,SAAS,IAAIlB,KAAK,CAAC5F,GAAG,CAAC,EAAC;UAC9BgG,EAAE,CAACc,SAAS,CAAC,GAAGlB,KAAK,CAAC5F,GAAG,CAAC,CAAC8G,SAAS,CAAC,CAAA;EACzC,OAAA;EACJ,KAAC,MAAI;QACDd,EAAE,CAACe,YAAY,CAAC/G,GAAG,EAAE4F,KAAK,CAAC5F,GAAG,CAAC,CAAC,CAAA;EACpC,KAAA;EACJ,GAAA;EACJ,CAAA;EAEO,SAASkG,KAAKA,CAACc,OAAO,EAAEvB,KAAK,EAAE;EAClC,EAAA,IAAMwB,aAAa,GAAGD,OAAO,CAACE,QAAQ,CAAA;EACtC,EAAA,IAAGD,aAAa,EAAC;MACb,IAAME,GAAG,GAAGH,OAAO,CAAC;;EAEpB,IAAA,IAAMI,SAAS,GAAGD,GAAG,CAACE,UAAU,CAAA;EAChC,IAAA,IAAIC,MAAM,GAAGd,SAAS,CAACf,KAAK,CAAC,CAAA;EAC7B;MACA2B,SAAS,CAACG,YAAY,CAACD,MAAM,EAAEN,OAAO,CAACQ,WAAW,CAAC,CAAA;EACnDJ,IAAAA,SAAS,CAACK,WAAW,CAACN,GAAG,CAAC,CAAA;EAE1B,IAAA,OAAOG,MAAM,CAAA;EACjB,GACI;EAGR,CAAA;;EAEA;EACA;EACA;EACA;;EC7EA;EACO,IAAMI,SAAS,GAAG,SAAZA,SAASA,CAAa5B,GAAG,EAAC;EACnC;EACAA,EAAAA,GAAG,CAACjI,SAAS,CAAC8J,KAAK,GAAG,UAAUC,OAAO,EAAC;MACpC,IAAMjH,EAAE,GAAG,IAAI,CAAA;MACfA,EAAE,CAACE,QAAQ,GAAG+G,OAAO,CAAA;EACrB;MACAlH,SAAS,CAACC,EAAE,CAAC,CAAA;MACb,IAAGiH,OAAO,CAAC5B,EAAE,EAAC;EACVrF,MAAAA,EAAE,CAACkH,MAAM,CAACD,OAAO,CAAC5B,EAAE,CAAC,CAAA;EACzB,KAAA;KACH,CAAA;EACD;EACAF,EAAAA,GAAG,CAACjI,SAAS,CAACgK,MAAM,GAAG,UAAU7B,EAAE,EAAC;MAChC,IAAMrF,EAAE,GAAG,IAAI,CAAA;EACf,IAAA,IAAIC,GAAG,GAAGD,EAAE,CAACE,QAAQ,CAAA;EACrBmF,IAAAA,EAAE,GAAGS,QAAQ,CAACqB,aAAa,CAAC9B,EAAE,CAAC,CAAA;EAC/B,IAAA,IAAG,CAACpF,GAAG,CAAC0E,MAAM,EAAC;EACX,MAAA,IAAID,QAAQ,CAAA;EACZ,MAAA,IAAG,CAACzE,GAAG,CAACyE,QAAQ,IAAIW,EAAE,EAAC;EAAK;UACxBX,QAAQ,GAAGW,EAAE,CAAC+B,SAAS,CAAA;EAC3B,OAAC,MAAI;EACD;EACA,QAAA,IAAG/B,EAAE,EAAGX,QAAQ,GAAGzE,GAAG,CAACyE,QAAQ,CAAA;EACnC,OAAA;EACA,MAAA,IAAGA,QAAQ,EAAC;EACR;EACA,QAAA,IAAMC,MAAM,GAAGF,iBAAiB,CAACC,QAAQ,CAAC,CAAA;UAC1CzE,GAAG,CAAC0E,MAAM,GAAGA,MAAM,CAAA;EACvB,OAAA;EACJ,KAAA;;EAEA;EACAiB,IAAAA,cAAc,CAAC5F,EAAE,EAAEqF,EAAE,CAAC,CAAA;KACzB,CAAA;EACL,CAAC;;ECtCD,SAASF,GAAGA,CAAC8B,OAAO,EAAC;EACjB,EAAA,IAAI,CAACD,KAAK,CAACC,OAAO,CAAC,CAAA;EACvB,CAAA;EAEAF,SAAS,CAAC5B,GAAG,CAAC,CAAA;EACdD,aAAa,CAACC,GAAG,CAAC;;;;;;;;"}